#! /bin/bash

# bash-session
# bash session management functions.

# Copyright (C) 2017 Stephen L Jones <sljones@slohj.org>
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# TODO:
#
# ! Move session title stuff here.
#   Prompt string ???
#
# ! save and set session dependent histories.
#
# ! set directory stack on session start.
#
# ! Use trap EXIT to save all session info.
#
# ! history stuff.
#
# * Look into overloading the builtin help to provide help information for user
#   functions and aliases.
#

# Public functions

# Print the dirstack to stdout in a reusabe format.
printd ()
{
    local ind

    for (( ind = -1 ; ind >= 0 - ${#DIRSTACK[@]} ; ind-- ))
    do
        # FIXME:
        # bash currently does not properly expand the ~ in the array.
        # This has been fixed in bash development but has not been released as
        # an offical patch yet, so we need to still use the string replacement.
        #printf "pushd -n %q > /dev/null\n" "${DIRSTACK[${ind}]}"
        printf "pushd -n %q > /dev/null\n" "${DIRSTACK[${ind}]/#\~/${HOME}}"
    done
}

# Private functions

# This function is used by PROMPT_COMMAND to set both the command line prompt
# and the xterm title.
_bs_set_stitle ()
{
    if [[ -n ${_bs_name} ]]
    then
        stitle="${_bs_name} "
        if [[ -v DISPLAY ]]
        then
            echo -ne "\033]0;${_bs_name}\007"
        fi
    else
        stitle=""
    fi
}

# Execute on load commands

# Set PROMPT_COMMAND
if [[ -v PROMPT_COMMAND ]]
then
    # The user is already using PROMPT_COMMAND for something else, so just turn
    # it into a compound command.
    PROMPT_COMMAND="${PROMPT_COMMAND}; _bs_set_stitle"
else
    PROMPT_COMMAND="_bs_set_stitle"
fi

# Vim mode line {{{1
# vim: expandtab softtabstop=4 shiftwidth=4 filetype=sh:
