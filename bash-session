#! /bin/bash

# bash-session
# bash session management functions.

# Copyright (C) 2017 Stephen L Jones <sljones@slohj.org>
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# TODO:
#
# ! Move session title stuff here.
#   Prompt string ???
#
# ! save and set session dependent histories.
#
# ! set directory stack on session start.
#
# ! Use trap EXIT to save all session info.
#
# ! history stuff.
#
# * Look into overloading the builtin help to provide help information for user
#   functions and aliases.
#


# Saves the directory stack as sourceable script that recreates the stack.
saved ()
{
    local ds_file
    local ind

    # Where do we save the stack?
    # We are going to use a hidden file in the user's home directory named
    # .bash_dstack[_TITLE] if the prompt and term title has been set with the
    # global variable ${title}.
    ds_file="${HOME}/.bash_dstack${title:+_${title}}"

    printf "dirs -c\n" > "${ds_file}"

    for (( ind = -1 ; ind >= 0 - ${#DIRSTACK[@]} ; ind-- ))
    do
        # This is stack index 0, bash currently does not properly expand
        # the ~ in the array.
        #printf "pushd -n %q > /dev/null\n" "${DIRSTACK[${ind}]}" \
        printf "pushd -n %q > /dev/null\n" "${DIRSTACK[${ind}]/#\~/${HOME}}" \
            >> "${ds_file}"
    done
    printf "popd\n" >> "${ds_file}"

}

# Vim mode line {{{1
# vim: expandtab softtabstop=4 shiftwidth=4 filetype=sh:
